#!/usr/bin/env ruby

require 'pgn2tex'
require 'optparse'
require 'ostruct'


class Options
  def self.parse!(args)
    options = OpenStruct.new

    options.output = STDOUT
    options.input = []

    opt_parser = OptionParser.new do |opts|
      opts.banner = "Usage: pgn2tex [-o output.tex] input.pgn [input2.pgn] ..."
      opts.separator ""

      opts.on("-o", "--output FILE",
              "Write output to FILE (default: STDOUT)") do |f|
        begin
          options.output = File.open(f, "w")
        rescue
          abort("Could not open output file '#{f}'.")
        end
      end

      opts.on_tail("-h", "--help", "Show this message") do
        puts opts
        exit
      end

      opts.on_tail("-v", "--version", "Show version") do
        puts "Pgn2tex #{Pgn2tex::VERSION}"
        exit
      end
    end
    opt_parser.parse!(args)

    if ARGV.empty?
      puts opt_parser
      abort("\nError: No input file(s) given.")
    else
      options.inputs = ARGV
    end

    options
  end
end

options = Options.parse!(ARGV)

parser = Pgn2tex::Parser.new
begin
  options.inputs.each do |fname|
    File.open(fname) do |f|
      parsed_file = parser.parse_pgn(f.read)
      if parsed_file.nil?
        STDERR.puts "#{fname} did not contain PGN data"
      else
        STDERR.puts "#{fname}: #{parsed_file.inspect}"
        options.output << parsed_file.to_tex
      end
    end
  end
rescue Exception => e
  abort("Error occured: #{e}")
ensure
  options.output.close
end
